#pragma once

#include <array>

constexpr int INPUT_SIZE = 23;
constexpr int L2_SIZE = 16;
constexpr int L3_SIZE = 1;

constexpr std::array<float, INPUT_SIZE *L2_SIZE> input_weights = {
    0.3899,  -0.0209, 0.0879,  -0.0273, 0.0463,  0.0012,  0.1046,  0.0197,  -0.4390, 4.1761,  -4.9096, -0.1450, 0.0850,
    -0.0035, -0.1633, -0.3369, -0.0091, 0.0133,  -0.0039, 0.0040,  0.0339,  0.0083,  -0.0446, 0.4792,  -1.2572, -0.1645,
    0.0529,  0.0666,  0.0223,  0.7278,  0.0146,  -0.8982, 0.2345,  -0.8162, 0.0211,  -0.1675, 0.0126,  -0.0184, -0.3946,
    0.1482,  0.0358,  -0.0746, -0.0050, -0.1178, -0.0270, -0.1305, 0.7223,  -0.0475, -0.7245, 0.1503,  0.0005,  0.0024,
    0.1942,  -0.0423, 0.0477,  2.7853,  -3.9618, -0.1398, 0.0623,  -0.0017, 0.0057,  -0.6047, 0.3719,  0.0611,  -0.0979,
    -0.0454, 0.0404,  0.0180,  -0.1379, 0.0047,  0.1097,  -0.1863, -1.3479, -0.2293, 0.0630,  -1.1005, -0.1240, 0.1570,
    0.8746,  -0.9986, 0.2836,  0.1197,  -0.0435, 0.0194,  0.0706,  0.1370,  0.1622,  0.1094,  -0.0093, -0.2361, -0.3950,
    -0.5912, 0.0419,  0.1532,  0.3308,  -0.3073, -0.1287, -0.0230, -0.0185, 0.0675,  -0.1682, 2.4596,  -3.0948, 0.1011,
    -0.0877, 0.0074,  -0.0009, 0.0901,  -0.5432, 0.1454,  -0.4680, 0.0048,  -1.3805, -0.7576, 0.5163,  0.0258,  -0.1682,
    0.9523,  0.5811,  0.0936,  0.0271,  -0.8641, -0.0483, 0.1402,  1.4150,  -2.0190, -0.1704, -0.1538, 0.0353,  -0.0010,
    -0.2009, 0.5647,  0.0131,  -0.0063, -0.0271, -1.2618, -1.0934, -0.0458, -0.0459, 0.0251,  0.1750,  0.1774,  -0.0311,
    -0.0078, 0.5701,  0.0065,  0.1886,  -0.3697, -0.9827, 0.0329,  -0.4774, -0.0012, 0.0129,  -2.5002, -0.0715, 0.0382,
    -0.0244, -0.0233, -0.0405, 0.0255,  0.0573,  -0.0180, 0.0645,  0.0548,  -0.0759, -0.0603, -0.0077, 0.0362,  0.0162,
    2.4199,  0.2895,  -6.4537, -0.8188, 0.5086,  0.0014,  0.0127,  -0.0480, -0.1355, 0.0038,  0.0455,  -0.0215, -0.0039,
    0.0102,  0.0929,  0.1312,  0.0299,  -0.2181, -0.4816, -0.0564, 0.0118,  0.7123,  0.6351,  -0.0006, 1.1994,  -1.6557,
    -0.0491, -1.8903, 0.0183,  0.0070,  -0.1152, 0.1269,  0.0581,  0.0223,  -0.0005, 0.1629,  -0.0889, -0.1012, -0.2845,
    0.0564,  0.0261,  -0.0184, -0.0962, -0.0010, 0.6082,  0.0046,  2.7839,  1.7833,  -9.7230, -0.9507, 0.4182,  -0.0001,
    0.0191,  0.1060,  -0.1379, 0.0381,  -0.0023, -0.0308, -0.0500, 0.0140,  0.1153,  0.0098,  0.0242,  0.0184,  0.0039,
    -0.0631, -0.0010, -0.0949, 0.0009,  1.8892,  0.7067,  -6.2707, -0.6532, 0.2192,  -0.0057, 0.0137,  -0.0613, -0.1055,
    0.2951,  -0.9565, -0.0187, -0.0550, 0.0068,  0.0783,  0.1485,  -0.0813, -0.7731, 0.1125,  0.1594,  0.0124,  0.4422,
    -0.0779, 0.0681,  -0.6721, 1.0096,  0.0143,  0.4287,  0.0100,  -0.0172, -0.0741, -0.1338, -0.0289, 0.0593,  0.0551,
    -0.9619, 0.0046,  0.2290,  -0.0897, -0.0445, -0.2590, 0.0051,  0.0050,  0.0052,  -0.5679, -0.0269, 0.1595,  1.4274,
    -2.4040, -0.0195, -0.2066, 0.0039,  0.0040,  0.0715,  0.0043,  0.0272,  -0.1119, -0.0099, 0.6621,  -0.0240, -0.3513,
    0.5582,  -0.0047, -0.0982, 0.0829,  0.0038,  0.0041,  -0.1152, -0.0178, -5.2118, -1.8832, 1.1786,  -0.1955, 0.3171,
    0.0016,  -0.5085, -0.2871, 0.2820,  0.0115,  -0.0303, -0.0244, 0.0253,  0.0348,  -0.1280, 0.0503,  0.0421,  1.2490,
    0.2541,  -0.2171, -0.0036, 0.7063,  0.0457,  0.0117,  1.3312,  -1.3120, -0.0057, 0.1874,  0.0074,  0.0149,  -0.0316,
    0.0466,  0.0281,  -0.0722, -0.0730, 0.6980,  0.0096,  -0.1682, 0.0721,  0.0351,  0.4549,  0.0369,  -0.0729, -0.0057,
    -0.0364, -0.0291, -0.0242, 3.4715,  -4.3989, 0.0303,  0.0442,  0.0030,  -0.4738, -0.9449, -0.0373, 0.0226,  -0.0298,
    -0.0293, 0.0082,  0.0614,  0.0653};

constexpr std::array<float, L2_SIZE> input_biases = {0.0784,  -0.6176, 0.1763,  0.4365,  0.9410,  0.8652,
                                                     -1.2267, -0.1270, -0.6532, -0.5163, -0.3114, -0.8667,
                                                     0.2924,  -1.7218, -0.5427, -0.4342};

constexpr std::array<float, L2_SIZE> l2_weights = {2.3283, -0.7343, 1.5966, 0.2837, 1.0662, 1.1319,  -2.3093, 3.8540,
                                                   0.7765, -6.5715, 4.6611, 0.9277, 0.8443, -3.3484, 0.8408,  2.0245};

constexpr float l2_bias = -3.7153;

constexpr std::array<float, INPUT_SIZE> means = {
    5.3897262980548,     6.283449086538792,    0.8503439266906317, 0.16171397372862945, 0.32162046016455903,
    0.35808620904068605, 0.05581650743961103,  0.806388677051369,  9.530289941625888,   865.775121250797,
    879.9650403169446,   990.7143903443475,    881.9560343349677,  662.3135681115664,   639.7501130590905,
    1.5028460061238345,  -700.6528841160466,   7.2202216103988945, 53.803967306498144,  0.07525829653748593,
    0.09033082829245674, 0.009257409562622238, 0.4154321127812078};

constexpr std::array<float, INPUT_SIZE> stddevs = {
    3.079945004417443,   5.958497886805035,   0.35673398076296187, 0.36818821875438335, 0.6653416681947776,
    0.47943766637129825, 0.2295670380016584,  0.39512780030606776, 30.113432134708418,  5114.3561310097875,
    5113.90735413281,    5799.314670168664,   5442.181650216963,   6096.507943341796,   4555.490615742364,
    2.0474194736701055,  10254.872548598589,  356.79865481074995,  1231.09126093491,    0.26380766732557603,
    0.2866551408093974,  0.09576904474208793, 0.49279638031478024};

class LMRNet
{
  public:
    LMRNet() = default;

    int predict(const std::array<int, INPUT_SIZE> &input)
    {
        float result = l2_bias;

        std::array<float, INPUT_SIZE> scaled;
        for (int i = 0; i < INPUT_SIZE; ++i)
        {
            scaled[i] = 1.0f * (input[i] - means[i]) / stddevs[i];
        }

        for (int i = 0; i < L2_SIZE; ++i)
        {
            output[i] = 0.0f;
            for (int j = 0; j < INPUT_SIZE; ++j)
            {
                output[i] += scaled[j] * input_weights[i * INPUT_SIZE + j];
            }
            output[i] += input_biases[i];
            output[i] = std::max(0.0f, output[i]);
        }

        for (int i = 0; i < L2_SIZE; ++i)
        {
            result += output[i] * l2_weights[i];
        }
        return round(result);
    }

    std::array<float, L2_SIZE> output;
};